/alternate-career-planner/src/App.js
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400  1) import React, { useState } from 'react';
4f554bd4 (Ryan Perry 2024-10-24 16:53:10 -0400  2) import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400  9) import CourseHistoryView from './views/CourseHistoryView/CourseHistory';
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400 12)   const [courses, setCourses] = useState([]);
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400 13) 
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400 14)   const handleFileParse = (parsedCourses) => {
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400 15)       setCourses(parsedCourses);
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400 16)   }
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400 17) 
1787fc1a (Ryan Perry 2024-10-24 18:36:58 -0400 18)   // Clear local storage when user opens website
1787fc1a (Ryan Perry 2024-10-24 18:36:58 -0400 19)   window.onunload = function () {
1787fc1a (Ryan Perry 2024-10-24 18:36:58 -0400 20)       localStorage.clear();
1787fc1a (Ryan Perry 2024-10-24 18:36:58 -0400 21)   }
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400 28)               <Route path="/" element={<Home onFileParse={handleFileParse} />} />
59ddf6de (Ryan Perry 2024-10-30 20:03:05 -0400 31)               <Route path="/course_history" element={<CourseHistoryView courses={courses} />} />

/alternate-career-planner/src/components/CourseHistory/CourseHistory.js
b01fdb44 (Ryan Perry 2024-10-30 20:05:41 -0400  8)                 {courses.map((course, index) =>(
b01fdb44 (Ryan Perry 2024-10-30 20:05:41 -0400  9)                     <><tr key={index} className="CompletedCoursesList">
b01fdb44 (Ryan Perry 2024-10-30 20:05:41 -0400 10)                             <th className="CourseName">{course.title}</th>
b01fdb44 (Ryan Perry 2024-10-30 20:05:41 -0400 20) export default CourseHistory;

/alternate-career-planner/src/components/FileUploader/Course.js
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  1) /* Course.js
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  2)  * Description: Implements the Course class.
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  3)  */
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  4) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  5) class Course {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400  6)     constructor() {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400  7)         this.courseCode = '';
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400  8)         this.creditHours = 0;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400  9)         this.grade = '';
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 10)         this.title = '';
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 11)     }
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 12) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 13)     /*
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 14)      * Returns a Course's course code.
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 15)      */
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 16)     getCourseCode() {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 17)         return this.courseCode;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 18)     }
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 19) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 20)     /*
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 21)      * Returns a Course's credit hours.
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 22)      */
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 23)     getCreditHours() {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 24)         return this.creditHours;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 25)     }
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 26) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 27)     /*
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 28)      * Returns a Course's grade.
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 29)      */
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 30)     getGrade() {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 31)         return this.grade;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 32)     }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 33) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 34)     /*
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 35)      * Returns a Course's title.
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 36)      */
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 37)     getTitle() {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 38)         return this.title;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 39)     }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 40) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 41)     /*
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 42)      * Sets a Course's member variables given
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 43)      * an unformatted course block.
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 44)      */
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 45)     setCourseInfo(block) {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 46)         const lines = block.split('\n');
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 47) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 48)         for (let i = 0; i < lines.length; i++) {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 49)             const line = lines[i].trim();
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 50) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 51)             if (i === 13) { // Course code line
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 52)                 this.courseCode = line.replace(/\s+/g, '')
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 53)                     .replace(/([A-Z]+)([0-9]+)/, '$1 $2');
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 54) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 55)                 const codeRegex = /^[A-Z]+\s[0-9]{3,4}$/;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 56)                 if (!codeRegex.test(this.courseCode)) {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 57)                     return false;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 58)                 }
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 59)             } else if (i === 18) { // Credit hours line
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 60)                 this.creditHours = parseFloat(line);
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 61) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 62)                 if (this.creditHours < 1 || this.creditHours > 4) {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 63)                     return false;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 64)                 }
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 65)             } else if (i === 23) { // Grade line
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 66)                 this.grade = line;
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 67) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 68)                  /*
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 69)                  * Transfer credits are preceded by a 'T'.
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 70)                  * S means the credit has been fulfilled.
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 71)                  */
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 72)                 const gradeRegex = /^IP|^S|^T?(A|B|C|D|F)(\+|-)?$/
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 73)                 if (!gradeRegex.test(this.grade)) {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 74)                     return false;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 75)                 }
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 76)             } else if (i === 28) { // Title line
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 77)                 this.title = line;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 78)             }
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 79)         }
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 80)         return true;
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 81)     }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 82) }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 83) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 84) export default Course;
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 85) 

/alternate-career-planner/src/components/FileUploader/FileHandler.js
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  1) /* FileHandler.js
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  2)  * Description: Parses the academic history file and 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  3)  * stores each course in the coursesTaken array.
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  4)  */
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  5) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  6) import Course from './Course';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  7) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  8) export let coursesTaken = [];
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  9) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 10) export const parseCourseContent = (content) => {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 11)     const even = 'class="even">';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 12)     const odd = 'class="odd">';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 13)     let courseBlock = '';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 14)     coursesTaken = [];
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 15) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 16)     const lines = content.split('\n');
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 17) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 18)     for (let i = 0; i < lines.length; i++) {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 19)         const line = lines[i];
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 20)         if (line.includes(even) || line.includes(odd)) {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 21)             courseBlock += line + '\n';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 22)             for (let j = 0; j < 30; j++) {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 23)                 if (i + 1 < lines.length) {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 24)                     courseBlock += lines[++i] + '\n';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 25)                 } else {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 26)                     break;
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 27)                 }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 28)             }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 29)             const newCourse = new Course();
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 30)             if (!newCourse.setCourseInfo(courseBlock)) {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 31)                 return false;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 32)             }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 33)             coursesTaken.push(newCourse);
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 34)             // Reset the course block for the next coures
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 35)             courseBlock = '';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 36)         }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 37)     }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 38)     localStorage.setItem('coursesTaken', JSON.stringify(coursesTaken));
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 39)     return true;
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 40) };

/alternate-career-planner/src/components/FileUploader/FileUploader.js
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  1) /* FileUploader.js
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  2)  * Description: Users can upload their academic history file.
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  3)  */
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400  4) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  5) import { useRef, useState } from 'react';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  6) import { useNavigate } from 'react-router-dom';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  7) import { parseCourseContent, coursesTaken } from './FileHandler';
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  8) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400  9) const FileUploader = ({ onFileParse }) => {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 10)     const [fileUploaded, setFileUploaded] = useState(false);
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 11)     const [error, setError] = useState('');
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 12)     const hiddenFileInput = useRef(null);
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 13)     const navigate = useNavigate();
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 14) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 15)     const handleClick = () => {
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 16)         hiddenFileInput.current.click();
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 17)     };
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 18) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 19)     const handleChange = (event) => {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 20)         const file = event.target.files[0];
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 21) 
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 22)         if (file && file.type !== 'text/html') {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 23)             setError('Invalid file type. Please upload an HTML file.');
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 24)             return;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 25)         }
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 26) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 27)         const reader = new FileReader();
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 28) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 29)         reader.onload = (e) => {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 30)             const content = e.target.result;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 31)             if(!parseCourseContent(content)) {
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 32)                 setError('Invalid course data. Please upload another file.');
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 33)                 return;
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 34)             }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 35)             
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 36)             setFileUploaded(true);
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 37)             onFileParse([...coursesTaken]);
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 38)             navigate('/course_history');
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 39)         };
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 40) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 41)         reader.onerror = (err) => {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 42)             console.error("Error reading file:", err);
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 43)         };
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 44) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 45)         reader.readAsText(file);
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 46)     };
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 47) 
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 48)     const handleViewCourseHistory = () => {
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 49)         navigate('/course_history');
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 50)     }
6bb50048 (Ryan Perry 2024-10-30 20:07:32 -0400 51) 
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 52)     return (
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 53)         <>
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 54)             <div className="buttons">
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 55)                 {error && <p>{error}</p>}
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 56)                 {fileUploaded ? (
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 57)                     <button
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 58)                         className="upload-button"
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 59)                         onClick={handleViewCourseHistory}
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 60)                     >
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 61)                         View Course History
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 62)                     </button>
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 63)                 ) : (
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 64)                     <button
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 65)                         className="upload-button"
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 66)                         onClick={handleClick}
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 67)                     >
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 68)                         Upload File
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 69)                     </button>
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 70)                 )}
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 71)                 <input
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 72)                     type='file'
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 73)                     onChange={handleChange}
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 74)                     ref={hiddenFileInput}
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 75)                     style={{ display: 'none' }}
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 76)                 />
4c776ee1 (Ryan Perry 2024-10-30 22:41:06 -0400 77)             </div>
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 78)         </>
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 79)     );
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 80) };
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 81) 
6b90dab7 (Ryan Perry 2024-10-25 11:05:20 -0400 82) export default FileUploader;

/alternate-career-planner/src/components/Header/Header.js
0a7b6710 (Ryan Perry 2024-10-24 18:05:54 -0400 15)                     <Link to='/'>

/alternate-career-planner/src/components/QuizComp/QuizComp.js
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400   3)  * Users answer questions from quizdata.js. Redirects to results
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400   4)  * screen on completion.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400   8) import { QuizData } from './quizdata2.js'
68b09694 (Ryan Perry 2024-10-24 16:49:23 -0400   9) import { Navigate } from 'react-router-dom'
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  11) const majorMapping = {
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  12)     I: "Computer Science",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  13)     M: "Computer Engineering",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  14)     N: "Electrical Engineering",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  15)     Q: "Aerospace Engineering",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  16)     J: "Biomedical Engineering",
a6773c7a (Ryan Perry 2024-10-24 18:18:23 -0400  17)     K: "Environmental Engineering",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  18)     S: "Chemical Engineering",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  19)     O: "Industrial Engineering",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  20)     R: "Mechanical Engineering",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  21)     L: "Nuclear Engineering",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  22)     P: "Civil Engineering",
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  23)     T: "Materials Science and Engineering"
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  24) }
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  25) 
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  30)         currentPath: '*',
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  32)         userAnswer: null,
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  35)         finalMajor: null
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  36)     };
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  38)     /*
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  39)      *  Loads the current question and its options 
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  40)      *  into the state based on the current path.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  41)      */
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  43)         const { currentPath } = this.state;
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  44)         const currentQuestion = QuizData.find(q => q.path === currentPath);
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  45) 
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  46)         if (currentQuestion) {
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  47)             this.setState({
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  48)                 question: currentQuestion.question,
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  49)                 options: currentQuestion.options,
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  50)                 currentIndex: currentQuestion.id,
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  51)                 disabled: true,
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  52)                 userAnswer: null
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  53)             });
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  54)         }
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  55)     };
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  57)     /*
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  58)      * Handles the user selecting an answer.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  59)      * Updates the userAnswer in state and enables the "Next" button.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  60)      */
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  62)         const { currentPath } = this.state;
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  63)         const currentQuestion = QuizData.find(q => q.path === currentPath);
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  65)         const selectedAnswerIndex =
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  66)             currentQuestion.options.indexOf(selectedAnswer);
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  68)         const newPath = currentQuestion.newPath[selectedAnswerIndex];
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  71)             userAnswer: selectedAnswer,
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  72)             disabled: false,
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  73)             nextPath: newPath
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  74)         });
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  75)     };
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  76) 
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  77)     /*
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  78)      * Moves to the next question.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  79)      * Ends the quiz if the next path is a major.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  80)      */
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  81)     nextQuestionHandler = () => {
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  82)         const { nextPath } = this.state;
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  83) 
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  84)         if (majorMapping[nextPath]) {
cb1b9c2c (Ryan Perry 2024-10-24 17:17:12 -0400  85)             const finalMajor = majorMapping[nextPath];
cb1b9c2c (Ryan Perry 2024-10-24 17:17:12 -0400  86) 
cb1b9c2c (Ryan Perry 2024-10-24 17:17:12 -0400  87)             localStorage.setItem('finalMajor', finalMajor);
cb1b9c2c (Ryan Perry 2024-10-24 17:17:12 -0400  88) 
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  89)             this.setState({
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  90)                 quizEnd: true,
cb1b9c2c (Ryan Perry 2024-10-24 17:17:12 -0400  91)                 finalMajor: finalMajor
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  92)             });
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  93)         } else {
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  94)             // Otherwise, update the path and load the next question
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  95)             this.setState({ currentPath: nextPath }, this.loadQuiz);
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  96)         }
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  97)     };
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400  99)     /*
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 100)      * Loads the first quiz question.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 101)      * Runs after the component mounts.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 102)      */
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 105)     };
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 106) 
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 107)     /*
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 108)      * Renders the quiz intereface.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 109)      * Displays the final major if the quiz ends.
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 110)      */
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 111)     render() {
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 112)         const { question, options, quizEnd, 
574defb2 (Ryan Perry 2024-10-30 20:03:55 -0400 113)                 userAnswer, disabled } = this.state;
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 115)         if (quizEnd) {
8cd85371 (Ryan Perry 2024-10-25 10:27:47 -0400 116)             return <Navigate to="/results"/>;
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 119)         return (
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 120)             <div>
56a423ac (Ryan Perry 2024-10-24 18:29:21 -0400 121)                 <h2>{`Question ${this.state.currentIndex + 1}`}</h2>
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 122)                 <h2>{question}</h2>
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 123) 
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 124)                 {options.map((option, index) => (
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 125)                     <p
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 126)                         key={index}
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 127)                         className={`options ${userAnswer === option 
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 128)                                                 ? 'selected' : null}`}
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 129)                         onClick={() => this.checkAnswer(option)}
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 130)                     >
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 131)                         {option}
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 132)                     </p>
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 133)                 ))}
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 134) 
8cd85371 (Ryan Perry 2024-10-25 10:27:47 -0400 135)                 <button className='next-button' 
8cd85371 (Ryan Perry 2024-10-25 10:27:47 -0400 136)                     disabled={disabled} onClick={this.nextQuestionHandler}>
8cd85371 (Ryan Perry 2024-10-25 10:27:47 -0400 137)                     Next
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 138)                 </button>
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 139)             </div>
fae16a39 (Ryan Perry 2024-10-24 15:49:26 -0400 140)         );

/alternate-career-planner/src/components/QuizComp/quizdata2.js
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400   1) /* quizdata2.js
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400   2)  * Description: Stores quiz questions and their options.
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400   3)  */
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400   4) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400   5) export const QuizData = [
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400   6)     {
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400   7)         path:     '*',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400   8)         id:        0,
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400   9) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  10)         question: 'Which of the following topics are you '
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  11)                 + 'most interested in studying?',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  12) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  13)         options:  ['Hardware and software aspects of computer systems',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  14)                    'Challenges in biology and medicine',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  15)                    'Designing and building systems and machines',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  16)                    'Properties of materials at the atomic level'],
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  17) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  18)         newPath:  ['A', 'B', 'C', 'D']
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  19)     },
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  20)     {
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  21)         path:     'A',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  22)         id:        1,
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  23) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  24)         question: 'How do you like to pass your time?',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  25) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  26)         options: ['Building computers',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  27)                   'Playing video games',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  28)                   'Playing with electronics',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  29)                   'Solving puzzles'],
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  30) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  31)         newPath: ['E', 'I', 'E', 'I']
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  32)     },
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  33)     {
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  34)         path:     'B',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  35)         id:        1,
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  36) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  37)         question: 'How do you like to pass your time?',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  38) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  39)         options: ['Trying new recipes',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  40)                   'Reviewing academic journals',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  41)                   'Lifting weights',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  42)                   'Working in the garden'],
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  43) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  44)         newPath: ['K', 'J', 'J', 'K']
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  45)     },
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  46)     {
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  47)         path:     'C',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  48)         id:        1,
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  49) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  50)         question: 'How do you like to pass your time?',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  51) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  52)         options: ['Playing sports',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  53)                   'Volunteering',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  54)                   'Building something in the shed',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  55)                   'Working on a project car'],
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  56) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  57)         newPath: ['F', 'F', 'G', 'G']
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  58)     },
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  59)     {
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  60)         path:     'D',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  61)         id:        1,
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  62) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  63)         question: 'How do you like to pass your time?',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  64) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  65)         options: ['Working outdoors',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  66)                   'Trying new recipes',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  67)                   'Watching documentaries',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  68)                   'Sewing'],
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  69) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  70)         newPath: ['L', 'H', 'L', 'H']
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  71)     },
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  72)     {
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  73)         path:     'E',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  74)         id:        2,
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  75) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  76)         question: 'Would you rather ...',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  77) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  78)         options: ['Design computer systems',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  79)                   'Develop new radar and communication systems',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  80)                   'Work on machines that control power plants',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  81)                   'Create new software'],
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  82) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  83)         newPath: ['M', 'N', 'N', 'M']
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  84)     },
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  85)     {
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  86)         path:     'F',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  87)         id:        2,
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  88) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  89)         question: 'Would you rather ...',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  90) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  91)         options: ['Improve the productivity of systems and processes',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  92)                   'Collaborate with many different people',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  93)                   'Build a bridge',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  94)                   'Work on a construction site'],
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  95) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  96)         newPath: ['O', 'O', 'P', 'P']
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  97)     },
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  98)     {
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400  99)         path:     'G',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 100)         id:        2,
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 101) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 102)         question: 'Would you rather ...',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 103) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 104)         options: ['Travel to space',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 105)                   'Work on air-conditioning systems',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 106)                   'Build a robot',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 107)                   'Design a jet engine'],
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 108) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 109)         newPath: ['Q', 'R', 'R', 'Q']
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 110)     },
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 111)     {
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 112)         path:     'H',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 113)         id:        2,
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 114) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 115)         question: 'Would you rather ...',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 116) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 117)         options: ['Manufacture gasoline',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 118)                   'Develop new materials for computer chips',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 119)                   'Improve waste water systems',
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 120)                   'Test the durability of golf clubs'],
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 121) 
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 122)         newPath: ['S', 'T', 'S', 'T']
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 123)     }
e8a2a183 (Ryan Perry 2024-10-24 15:49:58 -0400 124) ]

/alternate-career-planner/src/views/CompletedCoursesView/CompletedCoursesView.js 
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400  6) import React, { useState } from 'react';
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400  6) import React, { useState } from 'react';

/alternate-career-planner/src/views/CourseHistoryView/CourseHistory.js
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400  1) import React, {useEffect, useState } from "react";
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400  5) const CourseHistoryView = () => {
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400  6)     const [courses, setCourses] = useState([]);
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400  7) 
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400  8)     useEffect(() => {
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400  9)         const storedCourses = localStorage.getItem('coursesTaken');
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400 10)         if (storedCourses) {
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400 11)           setCourses(JSON.parse(storedCourses));
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400 12)         }
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400 13)     }, []);
9910c8b1 (Ryan Perry 2024-10-30 20:05:13 -0400 31) export default CourseHistoryView;

/alternate-career-planner/src/views/Home/Home.css
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 18) }
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 19) 
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 20) .button-section {
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 21)   display: flex;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 22)   flex-direction: row;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 23)   gap: 15px;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 29)     align-items: center;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 35)     width: 175px;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 36)     height: 60px;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 46)     width: 175px;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 47)     height: 60px;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 48)     font-size: 16px;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 49)     border: 2px solid #489FDF;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 50)     border-radius: 4px;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 51)     cursor: pointer;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 52) }
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 53) 
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 54) .next-button {
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 55)     background-color: white;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 56)     color: #489FDF;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 57)     width: 100px;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 58)     height: 40px;
4a60f509 (Ryan Perry 2024-10-25 10:28:15 -0400 60)     border: none;

/alternate-career-planner/src/views/Home/Home.js
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400   6) import React, {useEffect, useState } from 'react';
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400   7) import { Link, useNavigate } from 'react-router-dom';
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400  10) import FileUploader from "./../../components/FileUploader/FileUploader";
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  12) const Home = ({ onFileParse }) => {
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400  13)     const [finalMajor, setFinalMajor] = useState(null);
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  14)     const [coursesTaken, setCoursesTaken] = useState(null);
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  15)     const navigate = useNavigate();
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400  16) 
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400  17)     useEffect (() => {
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400  18)         const storedMajor = localStorage.getItem('finalMajor');
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400  19)         if (storedMajor) {
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400  20)           setFinalMajor(storedMajor);
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400  21)         }
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  22) 
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  23)         const storedCourses = localStorage.getItem('coursesTaken');
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  24)         if (storedCourses) {
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  25)             setCoursesTaken(JSON.parse(storedCourses));
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  26)         }
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400  27)     }, []);
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  28) 
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  29)     const handleViewCourseHistory = () => {
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  30)         navigate('/course_history');
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  31)     }
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400  62)     // Slide size
4d8f77f1 (Ryan Perry 2024-10-30 20:30:00 -0400  76)                     engineering, but not sure about your major? Don't worry, you've
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400  81)             </div> 
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400  82) 
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400  83) 
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400  84)             <div className='button-section'>
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  85)                 {/*File Upload or Course History Button*/}
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  86)                 {coursesTaken ? (
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  87)                     <div className='buttons'>
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  88)                         <FileUploader onFileParse={onFileParse} />
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  89)                         <button 
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  90)                             onClick={handleViewCourseHistory} 
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  91)                             className='upload-button'
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  92)                         >
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  93)                             View History
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  94)                         </button>
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  95)                     </div>
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  96)                 ) : (
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  97)                     <FileUploader onFileParse={onFileParse} />
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400  98)                 )}
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400 100)                 {/* Quiz Buttons */}
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 101)                 {finalMajor !== null ? (
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 102)                     // Quiz has been completed
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 103)                     <div className='buttons'>
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400 104)                         <Link to='/quiz'>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 105)                             <button className='quiz-button'>
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400 106)                                 Retake Quiz
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 107)                             </button>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 108)                         </Link>
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400 109)                         <Link to='/results'>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 110)                             <button className='quiz-button'>
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400 111)                                 View Quiz Results
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 112)                             </button>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 113)                         </Link>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 114)                     </div>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 115)                 ) : (
8aaba2f6 (Ryan Perry 2024-10-25 11:06:02 -0400 116)                     // Quiz has not been completed
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 117)                     <div className='buttons'>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 118)                         <Link to='/quiz'>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 119)                             <button className='quiz-button'>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 120)                                 Take Quiz
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 121)                             </button>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 122)                         </Link>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 123)                     </div>
3b25e624 (Ryan Perry 2024-10-24 18:03:49 -0400 124)                 )} 
6965bf7f (Ryan Perry 2024-10-30 20:06:23 -0400 146) 

/alternate-career-planner/src/views/MajorsListView/MajorsListView.js
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400  6) import React, {useEffect, useState } from 'react';
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400  9) import { Link } from 'react-router-dom'
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400 13)     const [finalMajor, setFinalMajor] = useState(null);
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400 14) 
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400 15)     useEffect (() => {
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400 16)         const storedMajor = localStorage.getItem('finalMajor');
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400 17)         if (storedMajor) {
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400 18)           setFinalMajor(storedMajor);
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400 19)         }
ad6590d1 (Ryan Perry 2024-10-24 17:18:00 -0400 20)     }, []);
21aaaff2 (Ryan Perry 2024-10-24 16:30:33 -0400 21) 
21aaaff2 (Ryan Perry 2024-10-24 16:30:33 -0400 25)             <p> Thanks for taking the quiz! Based on your provided answers, we think you'll enjoy: </p>
499c12e2 (Ryan Perry 2024-10-24 16:51:22 -0400 26)             <p className="majorlist-item">
499c12e2 (Ryan Perry 2024-10-24 16:51:22 -0400 27)                 <Link to={`/results/majors/${encodeURIComponent(finalMajor)}`}>
499c12e2 (Ryan Perry 2024-10-24 16:51:22 -0400 28)                     <h3 className="majorlist-title">{finalMajor}</h3>
499c12e2 (Ryan Perry 2024-10-24 16:51:22 -0400 29)                 </Link>
499c12e2 (Ryan Perry 2024-10-24 16:51:22 -0400 30)             </p>
21aaaff2 (Ryan Perry 2024-10-24 16:30:33 -0400 31)             <p>Alternatively, explore all majors below. </p>
21aaaff2 (Ryan Perry 2024-10-24 16:30:33 -0400 37) export default MajorsListView;
